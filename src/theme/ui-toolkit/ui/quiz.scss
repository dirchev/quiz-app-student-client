/* The animation code */
@keyframes checkingAnimation {
  0% {
    background-color: map-get($primary, 100);
    border-color: map-get($grey, 300);
  }
  100% {
    background-color: map-get($primary, 500);
    border-color: map-get($primary, 500);
  }
}

.quiz {
  margin: 1em;
  display: flex;
  min-height: 100%;
  flex-direction: column;
  & > .title {
    margin: 0 0 1em;
    grid-area: title;
    font-size: 1.4rem;
    text-align: center;
  }

  .info {
    display: flex;
    align-items: center;
    margin-bottom: .4em;
    .progress {
      grid-area: progress;
      display: flex;
      flex-wrap: wrap;
      width: 100%;

      .item {
        position: relative;
        z-index: 1;
        text-align: center;
        padding: .3rem .6rem;
        border-radius: 2px;
        margin-right: 10px;
        margin-left: 0;
        margin-top: 0;
        margin-bottom: 5px;

        &:after {
          z-index: 0;
          position: absolute;
          content: '';
          display: inline-block;
          top: 49%;
          left: 100%;
          bottom: 49%;
          height: 1px;
          width: 15px;
          background-color: map-get($grey, 800);
        }

        &:last-child {
          &:after {
            display:none;
          }
        }

        &:last-child {
          margin-right: 0;
        }
      }
    }

    .timeleft {
      white-space: nowrap;
      text-align: right;
      grid-area: timeleft;
    }
  }

  .controls {
    grid-area: controls;
  }

  .question, .question-feedback {
    margin: 0 0 .3em;
    flex: 1 1 auto;
    display: flex;
    flex-direction: column;
    grid-area: question;
    border: solid 1px map-get($grey, 300);
    box-shadow: 1px 1px 10px 1px #00000044;

    .title {
      margin: .5rem 1rem;
      font-size: 1.2rem;
    }

    .content {
      flex: 1 1 auto;
      padding: 0 1rem;
      text-align: justify;
      p {
        margin: .3em 0;
      }
    }

    .answer-select {
      display: grid;
      padding: .5rem 1rem 1rem;
      grid-gap: 1rem;
      grid-template-columns: 1fr 1fr;

      &.form {
        grid-template-columns: auto;
      }

      @media screen and (max-width: 660px) {
        grid-template-columns: auto;
      }

      .answer-select-item {
        overflow: hidden;
        display: flex;
        box-shadow: 1px 1px 4px 2px #00000022;
        flex-flow: row-reverse;
        border: solid 1px map-get($grey, 300);

        input[type=radio], input[type=checkbox] {
          visibility: hidden;
          display: none;

          &:checked ~ .check {
            animation-name: checkingAnimation;
            animation-duration: .1s;
            background-color: map-get($primary, 500);
            border-color: map-get($primary, 500);
          }
        }

        label {
          flex: 5 0 0;
          padding: .6rem;

          &:after {
            position: relative;
            content: " ";
            display: block;
            // makes take the max width-height of the .form-filed
            // the .form-field is overflow: hidden, so it will no go outside it
            // z-index: 1 will allow the whole area to be clicked and treated as
            // the checkbox is being toggled
            z-index: 1;
            top: -200%;
            left: -100%;
            width: 300%;
            height: 400%;
          }
        }

        &.checkbox > .check {
          align-self: center;
          border: solid 3px map-get($grey, 300);
          position: relative;
          height: 25px;
          width: 25px;
          margin: 0 10px;
        }
        &.radio > .check {
          align-self: center;
          border: solid 3px map-get($grey, 300);
          position: relative;
          height: 25px;
          width: 25px;
          margin: 0 10px;
          border-radius: 50%;
        }
      }
    }
  }

  .question-feedback > .answer {
    display: flex;
    flex-direction: column;
    & > .answer-item {
      border-top: solid 3px map-get($grey, 600);
      position: relative;
      padding: .4em;
      text-align: justify;
      flex-grow: 1;
      ul > li {
        &.correct {
          color: map-get($success, 600);
        }
        &.incorrect {
          color: map-get($danger, 600);
        }
      }
      .label {
        display: block;
        z-index: 2;
        font-size: .8em;
        position: absolute;
        background-color: map-get($grey, 600);
        color: map-get($grey, 50);
        padding: .2em .4em;
        border-radius: .5em;
        top: .2em;
        right: .6em;
      }
    }
  }

  @media screen and (min-width: 660px) {
    .question-feedback > .answer {
      justify-content: stretch;
      flex-direction: row;
      & > .answer-item {
        &:last-child {
          border-right: none;
        }
        border-right: solid 1px map-get($grey, 600);
      }
    }
  }
}

.quiz-details {
  display: grid;
  grid-template-columns: auto;
  grid-template-areas: "details" "engagements";

  .quiz-details-item-description {
    font-size: 1.2em;
    background-color: map-get($primary, 600);
    color: map-get($grey, 50);
    padding: 5vh 15% 7vh;
  }

  .quiz-details-item {
    padding: 1em 0 1em 3em;
    position: relative;
    .label {
      font-family: 'Karla', cursive;
      font-size: 1.4rem;
      font-weight: bold;
      margin: .3em 0;
    }
  }
}

.quiz-actions {
  margin: 1em;
}
